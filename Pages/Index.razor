@page "/"


@using BlazorApp.Data
@inject PetService PetService
@inject CareGiverService CareGiverService

<h1>Pet Care Giver</h1>

<p>Manage Pets and Care Givers, also assign pets to care givers</p>
<button @onclick="ShowCareGiverForm">Add a new Pet</button>
<button @onclick="ShowPetForm">Add a new Care giver</button>

@if (showCareGiverForm)
{

<h3>Add A Care Giver</h3>

<table>
    <tr>
        <td>
            <label for="name">Name</label>
        </td>
        <td>
            <input @bind="@careGiverName" placeholder="name" id="name" name="name"/>
        </td>
    </tr>
    <tr>
        <td>
<label for="email">Email</label>
        </td>
        <td>
<input @bind="@careGiverEmail" placeholder="email" id="email" name="email"  />
        </td>
    </tr>
    <tr>
        <td></td>
        
        <td>
            @if (formHasError)
        {
            <div>@addCareGiverError</div>
        }
        </td>
    </tr>
    <tr>
        <td></td>
        <td>
    <button @onclick="CreateCareGiver">Create Provider</button>

        </td>
    </tr>
</table>
}

@if (showPetForm)
{

<h3>Add A Pet</h3>

<table>
    <tr>
        <td>
            <label for="name">Name</label>
        </td>
        <td>
            <input @bind="@petName" placeholder="name" id="name" name="name"/>
        </td>
    </tr>
    <tr>
        <td></td>
        
        <td>
            @if (formHasError)
        {
            <div>@addPetError</div>
        }
        </td>
    </tr>
    <tr>
        <td></td>
        <td>
            <button @onclick="CreatePet">Create Provider</button>
        </td>
    </tr>
</table>
}

@if (careGivers == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <h3>Registered Care Givers</h3>

    <table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Name</th>
                <th>Pet Name</th>
                <th>Pet ID</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var careGiver in careGivers)
            {
                <tr>
                    <td>@careGiver.ID</td>
                    <td>@careGiver.Name</td>
                    <td></td>
                    <td></td>
                    <td>
                        <button>Assing a pet</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@if (pets == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <h3>Registered Pets</h3>

    <table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Name</th>
                <th>Care Giver Name</th>
                <th>Care Giver ID</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var pet in pets)
            {
                <tr>
                    <td>@pet.ID</td>
                    <td>@pet.Name</td>
                    <td></td>
                    <td></td>
                    <td>
                        <button>Assing care giver</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private bool showCareGiverForm;
    private bool showPetForm;
    private CareGiver[] careGivers;
    private Pet[] pets;

    private string petName;
    private string careGiverName;
    private string careGiverEmail;
    private bool formHasError;
    private string addCareGiverError;
    private string addPetError;
    protected override async Task OnInitializedAsync()
    {
        careGivers = await CareGiverService.GetCareGiverAsync();
        pets = await PetService.GetPetAsync();
    }
    private void CreateCareGiver () 
    {
        CareGiver _careGiver = new CareGiver();
        _careGiver.Name = careGiverName;
        _careGiver.Email = careGiverEmail;
        _careGiver.ID = DateTime.Now.Millisecond;
        careGivers.Append(_careGiver);
        careGiverName = "";
        careGiverEmail = "";
        showCareGiverForm = false;
    }

    private void ShowCareGiverForm () 
    {
        showCareGiverForm = true;
    }

    
    private void ShowPetForm () 
    {
        showPetForm = true;
    }

    private void CreatePet () 
    {
        Pet _pet = new Pet();
        _pet.Name = petName;
        _pet.ID = DateTime.Now.Millisecond;
        pets.Append(_pet);
        petName = "";
        showPetForm = false;
    }

    private void SetCareGiverName () 
    {
    }
}
